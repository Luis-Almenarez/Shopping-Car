{"version":3,"file":"bundle.js","sources":["../../src/JS/product.js","../../src/JS/cart.js"],"sourcesContent":["const product = document.getElementById(\"producto\");\r\nconst productImage = document.querySelector(\".producto__imagen\");\r\nconst thumbs = document.querySelector(\".producto__thumbs\");\r\n/*BOTONTES CANTIDAD*/\r\nconst btnPlus = document.querySelector(\"#incrementar-cantidad\");\r\nconst btnMinus = document.querySelector(\"#disminuir-cantidad\");\r\nlet inputQuantity = document.querySelector(\"#cantidad\");\r\n/*BOTONTES CANTIDAD*/\r\n\r\n/* COLOR */\r\nconst colorSelected = product.querySelector(\"#propiedad-color\");\r\n\r\n// Agrega un evento de clic al elemento 'thumbs' (las miniaturas de imágenes del producto).\r\nthumbs.addEventListener(\"click\", (e) => {\r\n  // Verifica si el objetivo del evento de clic es una etiqueta 'IMG'.\r\n  if (e.target.tagName === \"IMG\") {\r\n    // Obtiene la fuente (src) de la imagen que se hizo clic.\r\n    const imageSrc = e.target.src;\r\n\r\n    // Encuentra la última barra diagonal en la ruta de la imagen.\r\n    const lastIndex = imageSrc.lastIndexOf(\"/\");\r\n\r\n    // Extrae el nombre de la imagen a partir de la ruta completa.\r\n    const nameImage = imageSrc.substring(lastIndex + 1);\r\n\r\n    // Actualiza la fuente de la imagen principal del producto con la nueva imagen seleccionada.\r\n    productImage.src = `./img/products/${nameImage}`;\r\n  }\r\n});\r\n\r\n// Con esta función actualizo la miniatura del color que se haya seleccionado\r\ncolorSelected.addEventListener(\"click\", (e) => {\r\n  if (e.target.tagName === \"INPUT\") {\r\n    const color = e.target.value;\r\n    productImage.src = `./img/products/${color}.jpg`;\r\n\r\n    // Cambia las rutas de las miniaturas según el color seleccionado\r\n    const thumbnails = document.querySelectorAll(\".producto__thumb-img\");\r\n    thumbnails.forEach((thumbnail, index) => {\r\n      thumbnail.src = `./img/thumbs/${color}/${color}${index + 1}.jpg`;\r\n    });\r\n  }\r\n});\r\n\r\n// Con esta función incremento en 1 el valor del input siempre que se haga click\r\nbtnPlus.addEventListener(\"click\", (e) => {\r\n  inputQuantity.value = parseInt(inputQuantity.value) + 1;\r\n});\r\n\r\n// Con esta función disminuyo en 1 el valor del input siempre que se haga click\r\nbtnMinus.addEventListener(\"click\", (e) => {\r\n  inputQuantity.value = parseInt(inputQuantity.value) - 1;\r\n  if (parseInt(inputQuantity.value) <= 1) {\r\n    inputQuantity.value = 1;\r\n  }\r\n});\r\n","const btnOpenCart = document.querySelectorAll('[data-accion=\"abrir-carrito\"]'); // Selecciona los botones de abrir el carrito por su atributo 'data-accion'.\r\n\r\nconst btnCloseCart = document.querySelectorAll('[data-accion=\"cerrar-carrito\"]'); // Selecciona los botones de cerrar el carrito por su atributo 'data-accion'.\r\n\r\nconst windowCart = document.getElementById(\"carrito\"); // Obtiene el elemento del carrito por su ID.\r\n\r\nconst addCart = document.getElementById(\"agregar-al-carrito\"); // Obtiene el botón 'Add to Cart' del HTML\r\n\r\nconst product = document.getElementById(\"producto\"); // Obtiene el contenedor de todo el producto\r\n\r\nlet cartProduct = []; // Generamos una variable la cual tendrá la cantidad de productos que el usuario agregue\r\n\r\n// Define una función para mostrar el carrito.\r\nconst renderCart = () => {\r\n  windowCart.classList.add(\"carrito--active\");\r\n  console.log(cartProduct);\r\n};\r\n\r\n// Abrir carrito.\r\nbtnOpenCart.forEach((btn) => {\r\n  btn.addEventListener(\"click\", (e) => {\r\n    renderCart(); // Muestra el carrito al hacer clic en un botón de abrir.\r\n  });\r\n});\r\n\r\n// Cerrar carrito.\r\nbtnCloseCart.forEach((btn) => {\r\n  btn.addEventListener(\"click\", (e) => {\r\n    windowCart.classList.remove(\"carrito--active\"); // Oculta el carrito al hacer clic en un botón de cerrar.\r\n  });\r\n});\r\n\r\n// Cuando se hace clic en el botón \"addCart\", se recopilan los datos del producto seleccionado\r\n// y se agregan al array \"cartProduct\" para mostrarlos en el carrito más tarde.\r\naddCart.addEventListener(\"click\", (e) => {\r\n  let id = product.dataset.productoId; // Obtiene el ID del producto desde el atributo \"data-producto-id\".\r\n  let name = product.querySelector(\".producto__nombre\").innerText; // Obtiene el nombre del producto.\r\n  let quantity = parseInt(product.querySelector(\"#cantidad\").value); // Obtiene la cantidad del producto como un número entero.\r\n  let color = product.querySelector(\"#propiedad-color input:checked\").value; // Obtiene el color seleccionado del producto.\r\n  let ShippingType = product.querySelector(\"#propiedad-envio input:checked\").value; // Obtiene el tipo de envío seleccionado para el producto.\r\n  // Agrega los datos recopilados como un nuevo objeto al array \"cartProduct\".\r\n  cartProduct.push({\r\n    id: id,\r\n    name: name,\r\n    quantity: quantity,\r\n    color: color,\r\n    ShippingType: ShippingType,\r\n  });\r\n});\r\n"],"names":["product","document","getElementById","productImage","querySelector","thumbs","btnPlus","btnMinus","inputQuantity","colorSelected","addEventListener","e","target","tagName","imageSrc","src","lastIndex","lastIndexOf","nameImage","substring","color","value","querySelectorAll","forEach","thumbnail","index","parseInt","btnOpenCart","btnCloseCart","windowCart","addCart","cartProduct","btn","classList","add","console","log","remove","id","dataset","productoId","name","innerText","quantity","ShippingType","push"],"mappings":"aAAA,MAAMA,EAAUC,SAASC,eAAe,YAClCC,EAAeF,SAASG,cAAc,qBACtCC,EAASJ,SAASG,cAAc,qBAEhCE,EAAUL,SAASG,cAAc,yBACjCG,EAAWN,SAASG,cAAc,uBACxC,IAAII,EAAgBP,SAASG,cAAc,aAI3C,MAAMK,EAAgBT,EAAQI,cAAc,oBAG5CC,EAAOK,iBAAiB,SAAUC,IAEhC,GAAyB,QAArBA,EAAEC,OAAOC,QAAmB,CAE9B,MAAMC,EAAWH,EAAEC,OAAOG,IAGpBC,EAAYF,EAASG,YAAY,KAGjCC,EAAYJ,EAASK,UAAUH,EAAY,GAGjDb,EAAaY,IAAM,kBAAkBG,GACtC,KAIHT,EAAcC,iBAAiB,SAAUC,IACvC,GAAyB,UAArBA,EAAEC,OAAOC,QAAqB,CAChC,MAAMO,EAAQT,EAAEC,OAAOS,MACvBlB,EAAaY,IAAM,kBAAkBK,QAGlBnB,SAASqB,iBAAiB,wBAClCC,SAAQ,CAACC,EAAWC,KAC7BD,EAAUT,IAAM,gBAAgBK,KAASA,IAAQK,EAAQ,OAAO,GAEnE,KAIHnB,EAAQI,iBAAiB,SAAUC,IACjCH,EAAca,MAAQK,SAASlB,EAAca,OAAS,CAAC,IAIzDd,EAASG,iBAAiB,SAAUC,IAClCH,EAAca,MAAQK,SAASlB,EAAca,OAAS,EAClDK,SAASlB,EAAca,QAAU,IACnCb,EAAca,MAAQ,EACvB,ICtDH,MAAMM,EAAc1B,SAASqB,iBAAiB,iCAExCM,EAAe3B,SAASqB,iBAAiB,kCAEzCO,EAAa5B,SAASC,eAAe,WAErC4B,EAAU7B,SAASC,eAAe,sBAElCF,EAAUC,SAASC,eAAe,YAExC,IAAI6B,EAAc,GASlBJ,EAAYJ,SAASS,IACnBA,EAAItB,iBAAiB,SAAUC,IAN/BkB,EAAWI,UAAUC,IAAI,mBACzBC,QAAQC,IAAIL,EAME,GACZ,IAIJH,EAAaL,SAASS,IACpBA,EAAItB,iBAAiB,SAAUC,IAC7BkB,EAAWI,UAAUI,OAAO,kBAAkB,GAC9C,IAKJP,EAAQpB,iBAAiB,SAAUC,IACjC,IAAI2B,EAAKtC,EAAQuC,QAAQC,WACrBC,EAAOzC,EAAQI,cAAc,qBAAqBsC,UAClDC,EAAWjB,SAAS1B,EAAQI,cAAc,aAAaiB,OACvDD,EAAQpB,EAAQI,cAAc,kCAAkCiB,MAChEuB,EAAe5C,EAAQI,cAAc,kCAAkCiB,MAE3EU,EAAYc,KAAK,CACfP,GAAIA,EACJG,KAAMA,EACNE,SAAUA,EACVvB,MAAOA,EACPwB,aAAcA,GACd"}